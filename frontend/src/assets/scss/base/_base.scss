@use 'vars' as v;
@use '../mixins/base' as m;

$auth-input-font-size: v.$input-font-size + 0.2rem;

.input-group {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 2px;
    width: 100%;
    height: v.$input-height;
    cursor: text;
    transition: height ease 200ms;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    .input {
        display: flex;
        align-items: center;
        gap: 6px;
        width: 100%;

        label {
            position: absolute;
            transform: translate(2.3rem, -0.3rem);
            font-size: $auth-input-font-size;
            color: v.$bg-bar;
            cursor: text;
            font-weight: 600;
            transition: transform ease 200ms;
        }

        svg {
            cursor: text;
            font-size: $auth-input-font-size;
            color: v.$bg-bar;
            transition: color ease 200ms;
        }

        input {
            font-size: $auth-input-font-size;
            background: none;
            border: none;
            width: 100%;

            &:focus {
                outline: none;
            }
        }

        input[type="password"]{
            font-size: calc($auth-input-font-size);
            background: none;
        }
    }

    .bar {
        background: v.$bg-bar;
        height: 2px;
        width: 100%;
        border-radius: 10px;
        transition: background ease 200ms;
    }

    svg {
        transform: translate(0, -0.3rem);
    }

    &:hover {
        label {
            color: v.$color-primary;
        }

        svg {
            color: v.$color-primary;
        }

        .bar {
            background: v.$color-primary;
        }
    }

    &.active {        
        height: v.$input-height-focus;

        input {
            color: v.$color-body;
            font-weight: 600;
        }

        label {
            transform: translate(0, -2.5rem);
            color: v.$color-body;
            font-weight: normal;
        }

        svg {
            color: v.$color-primary;
        }

        .bar {
            background: v.$color-primary;
        }
    }

    &.input {
        &-warning {
            &:hover {
                label {
                    color: v.$color-warning;
                }
        
                svg {
                    color: v.$color-warning;
                }
        
                .bar {
                    background: v.$color-warning;
                }
            }

            &.active { 
                label {
                    color: v.$color-body;
                }

                svg {
                    color: v.$color-warning;
                }
        
                .bar {
                    background: v.$color-warning;
                }
            }
        }
    }
}

.form-checkbox {
    position: relative;
    display: block;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; 

    .checkbox {
        position: absolute;
        opacity: 0;
        
        & + label {
            display: inline-block;
            position: relative;
            padding-top: 2px;
            cursor: pointer;
            line-height: v.$checkbox-size;
            padding-left: v.$checkbox-size + 6;
            font-size: $auth-input-font-size;
            font-family: sans-serif;
            font-weight: 500;
            color: v.$color-body;
            transition: color ease 200ms;
          
            &:before {
                position: absolute;
                display: block;
                left: 0;
                top: 0;
                content: "";
                background: transparent;
                width: v.$checkbox-size;
                height: v.$checkbox-size;            
                box-shadow: inset 0 0 0 2px v.$bg-bar;
                border-radius: 4px;
                transition: 200ms ease-in-out all;                
            }
          
            &:after {
                position: absolute;
                display: block;
                top: 5px;
                left: 8px;
                content: "";
                width: 3px;
                height: 7px;
                border-right: 1px solid transparent;
                border-bottom: 1px solid transparent;
                transform: rotate(45deg);            
                transition: 200ms ease-in-out all;
            }
        }
        
        & + label:hover {
          color: v.$color-primary;
        }
        
        & + label:focus {
          outline: none;
        }
        
        &:checked {
            & + label {
                color: v.$color-primary;

                &:before {
                    background: v.$color-primary;
                    box-shadow: none;
                }

                &:after {
                    border-color: v.$color-white;
                }
            }
        }
        
        &:disabled {
          & + label {
            &:before {
                background: #f2f2f2;
                box-shadow: none;
            }
            &:after {
                border-color: transparent;
            }
          }
        }
        
        &:checked:disabled {
          & + label {
            &:before {
                background: #f2f2f2;
                box-shadow: none;
            }
            &:after {
                border-color: #cecece;
            }
          }
        }
    }
}

.btn {
    width: 100%;
    height: 45px;
    border: v.$bg-bar solid 2px;
    border-radius: v.$btn-radius;
    background: none;
    color: v.$bg-bar;
    font-size: $auth-input-font-size;
    font-weight: 600;
    cursor: pointer;
    padding: 13px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; 
    transition: background 200ms ease, border 200ms ease;

    &:hover {
        background: v.$bg-bar;
        color: v.$color-white;
    }
    
    &.btn-sm {
        height: 36px;
        padding: 9px;
    }

    &.btn {
        &-primary {
            border: v.$color-primary solid 2px;
            background: v.$color-primary;
            color: v.$color-white;

            &:hover {
                border: v.$color-primary-hover solid 2px;
                background-color: v.$color-primary-hover;
            }

            &:disabled {
                cursor: default;
                border: v.$color-primary-disabled solid 2px;
                background: v.$color-primary-disabled;
            }
        }

        &-warning {
            border: v.$color-warning solid 2px;
            background: v.$color-warning;
            color: v.$color-white;

            &:hover {
                border: v.$color-warning-hover solid 2px;
                background-color: v.$color-warning-hover;
            }

            &:disabled {
                cursor: default;
                border: v.$color-warning-disabled solid 2px;
                background: v.$color-warning-disabled;
            }
        }
    }
}

.table-content {
    .table-search {
        display: flex;

        .search {
            max-width: 350px;
            box-sizing: border-box;
        }
    }

    .table-responsive {
        width: 100%;
        
        table {
            border-spacing: 0;
            width: 100%;
    
            thead {
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none; 
                
                tr {
                    th {
                        padding: 5px 5px 3px 5px;
                        font-size: 1.1em;
                        text-align: left;
                        border-bottom: 2px solid v.$border-color;
                    }
                }
            }
    
            tbody {
                tr {
                    &:hover {
                        background: v.$color-white-hover;
                    }

                    td {
                        padding: 5px;
                        text-align: left;
                        border-bottom: 1px solid v.$border-color;
                    }
                }
            }
        }
    }

    .table-pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 0 5px 0;

        .pagination {
            display: flex;

            button {
                border-radius: 0;
                height: 38px;
                width: 38px;
                padding: 8px 5px 5px 5px;

                &:first-child{
                    border-top-left-radius: v.$btn-radius;
                    border-bottom-left-radius: v.$btn-radius;
                }

                &:last-child{
                    border-top-right-radius: v.$btn-radius;
                    border-bottom-right-radius: v.$btn-radius;
                }

                &.active {
                    background-color: v.$color-white-hover;
                    color: v.$color-primary;
                    border: 1px solid v.$color-white-hover;
                }
            }
        }
    }
}

.badge {
    padding: 2px 8px 2px 8px;
    background: v.$color-primary;
    color: v.$color-white;
    font-weight: 600;
    border-radius: v.$btn-radius;
    box-sizing: border-box;
    font-size: v.$input-font-size;

    &.danger {
        background: v.$color-danger;
    }
}

.row {
    display: flex;
}

.align-content-start {
    align-content: flex-start; 
}

.align-content-end {
    align-content: flex-end; 
}

.align-content-between {
    align-content: space-between; 
}

.justify-content-start {
    justify-content: flex-start;
}

.justify-content-end {
    justify-content: flex-end; 
}

.justify-content-between {
    justify-content: space-between; 
}

@for $i from 1 through 20 {
    .mt-#{$i}px{
        margin-top: #{$i}px !important;
    }
}

@for $i from 1 through 20 {
    .pt-#{$i}px{
        padding-top: #{$i}px !important;
    }
}

@for $i from 1 through 20 {
    .pb-#{$i}px{
        padding-bottom: #{$i}px !important;
    }
}

@for $i from 1 through 4 {
    .grid-#{$i} {
        @include m.grid(#{$i});
    }
}

@for $i from 0 through 20 {
    .grid-t-#{$i}-1 {
        @include m.grid-t-2(#{$i}fr, 1fr);
    }
}

@for $i from 1 through 20 {
    .g-#{$i}px{
        gap: #{$i}px !important;
    }
}